---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
  projectName: string;
  projectDescription: string;
  projectImage: string | ImageMetadata;
  projectLink: string;
  technologies: string[];
  githubLink?: string;
}

const {
  projectName,
  projectDescription,
  projectImage,
  projectLink,
  technologies,
  githubLink,
} = Astro.props;
---

<div class="work-item flex flex-col md:flex-row items-start gap-6">
  <div class="md:w-1/3 w-full">
    <a
      href={projectLink}
      target="_blank"
      rel="noopener noreferrer"
      class="block group"
    >
      {
        typeof projectImage === "string" ? (
          <Image
            src={projectImage}
            class="w-full rounded-lg border border-gray-200 group-hover:opacity-80 transition-opacity"
            alt={projectName}
            inferSize={true}
          />
        ) : (
          <Image
            src={projectImage}
            class="w-full rounded-lg border border-gray-200 group-hover:opacity-80 transition-opacity"
            alt={projectName}
          />
        )
      }
    </a>
  </div>
  <div class="md:w-2/3 w-full">
    <a
      href={projectLink}
      target="_blank"
      rel="noopener noreferrer"
      class="group flex flex-col"
    >
      <h3 class="text-xl font-bold group-hover:text-blue-600 transition-colors">
        {projectName}
      </h3>

      {
        githubLink && (
          <a
            href={githubLink}
            target="_blank"
            rel="noopener noreferrer"
            class="text-blue-500 hover:underline text-sm cursor-pointer"
          >
            GitHub
          </a>
        )
      }
    </a>
    <p class="text-gray-600 mt-2 mb-3">
      {projectDescription}
    </p>
    <div class="flex flex-wrap gap-2">
      {
        technologies.map((tech) => (
          <span class="bg-gray-200 text-gray-700 text-xs font-medium px-2.5 py-1 rounded">
            {tech}
          </span>
        ))
      }
    </div>
  </div>
</div>
